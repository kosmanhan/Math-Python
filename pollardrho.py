#4.6 Factoring Using the Pollard Rho Method (Number Theory 6th edition by Kenneth Rosen )
#f: function, x: initial point, t: an even number of iterations, n: number we are trying to factorize,
#l: sequence generated by function and initial point%n, f: factors generated by gcd of sequence and n,
#tf: set of trivial factors, ntf: set of non-trivial factors
def pollardrho(f,x,t,n):
  c=0
  tf=[n]
  while n%2==0:
    tf.append(n)
    n=int(n/2)
    c=c+1
  for i in range(c+1):
    tf.append(2**i)
  l=[]
  for i in range(t):
    m=f(x)%n
    l.append(m)
    x=m
  f=[]
  tf=set(tf)
  for i in range(2,t,2):
    f.append(math.gcd(int((l[i])-(l[int(i/2)])),n))
  f=set(f)
  ntf=f|tf
  return ntf
